'''Boolean grammars''', introduced by {{ill|Alexander Okhotin|lt=Okhotin|WD=Q29032931}}, are a class of [[formal grammar]]s studied in [[formal language]] theory. They extend the basic type of grammars, the [[context-free grammars]], with [[Logical_conjunction|conjunction]] and [[negation]] operations. Besides these explicit operations, Boolean grammars allow implicit [[Logical_disjunction|disjunction]] represented by multiple rules for a single nonterminal symbol, which is the only logical connective expressible in context-free grammars. Conjunction and negation can be used, in particular, to specify intersection and complement of languages. An intermediate class of grammars known as [[conjunctive grammar]]s allows conjunction and disjunction, but not negation. 

The rules of a Boolean grammar are of the form

<math>A \to \alpha_1 \And \ldots \And \alpha_m \And
\lnot\beta_1 \And \ldots \And \lnot\beta_n </math>

where <math>A</math> is a nonterminal, <math>m+n \ge 1</math> and <math>\alpha_1</math>, ..., <math>\alpha_m</math>, <math>\beta_1</math>, ..., <math>\beta_n</math> are strings formed of symbols in <math>\Sigma</math> and <math>N</math>. Informally, such a rule asserts that every string <math>w</math> over <math>\Sigma</math> that satisfies each of the syntactical conditions represented by <math>\alpha_1</math>, ..., <math>\alpha_m</math> and none of the syntactical conditions represented by <math>\beta_1</math>, ..., <math>\beta_n</math> therefore satisfies the condition defined by <math>A</math>.

There exist several formal definitions of the language generated by a Boolean grammar. They have one thing in common: if the grammar is represented as a system of [[language equation]]s with union, intersection, complementation and concatenation, the languages generated by the grammar must be the solution of this system. The semantics differ in details, some define the languages using language equations, some draw upon ideas from the field of [[logic programming]]. However, these nontrivial issues of formal definition are mostly irrelevant for practical considerations, and one can construct grammars according to the given informal semantics.  The practical properties of the model are similar to those of [[conjunctive grammar]]s, while the descriptional capabilities are further improved. In particular, some practically useful properties inherited from [[context-free grammars]], such as efficient parsing algorithms, are retained, see {{harvtxt|Okhotin|2010}}.

==References==
* {{cite journal|title=Boolean Grammars|journal=Information and Computation|date=2004-10-10|first=Alexander|last=Okhotin|volume=194|issue=1|pages=19–48|doi= 10.1016/j.ic.2004.03.006}}
* {{cite techreport|first=Alexander|last=Okhotin|title=Nine Open Problems on Conjunctive and Boolean Grammars|number=794 |institution=TUCS|year=2006|url=https://pdfs.semanticscholar.org/2fd5/9363120a1576a3aa7b3cabec3117ca414472.pdf}}
* {{cite journal|title=Well-founded semantics for Boolean grammars|journal=Information and Computation|date=2009|first=Vassilis|last=Kountouriotis|author2=Nomikos, Christos |author3=Rondogiannis, Panos |volume=207|issue=9|pages=945–967|doi=10.1016/j.ic.2009.05.002|url=http://www.di.uoa.gr/%7Eprondo/papers/knr09.pdf}}
* Okhotin, Alexander (2010). "Fast parsing for Boolean grammars: a generalization of Valiant's algorithm", [[International Conference on Developments in Language Theory]]  (DLT 2010), [[Lecture Notes in Computer Science]] 6224, pp. 340-351. [http://users.utu.fi/aleokh/papers/boolean_matrix.pdf Preprint] available online.

==See also==
* [[Language equation]]s

==External links==
* [http://users.utu.fi/aleokh/boolean/ Okhotin's page on Boolean grammars]

[[Category:Formal languages]]

{{Formalmethods-stub}}